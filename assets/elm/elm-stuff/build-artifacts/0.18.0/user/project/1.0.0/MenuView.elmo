var _user$project$MenuView$room = F2(
	function (_p0, room) {
		var _p1 = _p0;
		return A2(
			_elm_lang$html$Html$div,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$h2,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(
							A2(
								_elm_lang$core$Basics_ops['++'],
								room.name,
								A2(
									_elm_lang$core$Basics_ops['++'],
									' - members: ',
									_elm_lang$core$Basics$toString(room.members)))),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_rundis$elm_bootstrap$Bootstrap_Button$button,
						{
							ctor: '::',
							_0: _rundis$elm_bootstrap$Bootstrap_Button$secondary,
							_1: {
								ctor: '::',
								_0: _rundis$elm_bootstrap$Bootstrap_Button$disabled(
									!_elm_lang$core$Native_Utils.eq(_p1.roomName, _elm_lang$core$Maybe$Nothing)),
								_1: {
									ctor: '::',
									_0: _rundis$elm_bootstrap$Bootstrap_Button$attrs(
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Events$onClick(
												_user$project$Model$JoinRoom(room.name)),
											_1: {ctor: '[]'}
										}),
									_1: {ctor: '[]'}
								}
							}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('Join'),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			});
	});
var _user$project$MenuView$createRoom = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$h2,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(
						A2(
							_elm_lang$core$Basics_ops['++'],
							'Create room \"',
							A2(_elm_lang$core$Basics_ops['++'], model.typedRoomName, '\" and join'))),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_rundis$elm_bootstrap$Bootstrap_Button$button,
					{
						ctor: '::',
						_0: _rundis$elm_bootstrap$Bootstrap_Button$primary,
						_1: {
							ctor: '::',
							_0: _rundis$elm_bootstrap$Bootstrap_Button$attrs(
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Events$onClick(
										_user$project$Model$JoinRoom(model.typedRoomName)),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('Confirm'),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$MenuView$rooms = function (model) {
	var filtered = A2(
		_elm_lang$core$List$filter,
		function (i) {
			return A2(
				_elm_lang$core$Regex$contains,
				_elm_lang$core$Regex$regex(model.typedRoomName),
				i.name);
		},
		model.rooms);
	return _elm_lang$core$List$isEmpty(filtered) ? _user$project$MenuView$createRoom(model) : A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		A2(
			_elm_lang$core$List$map,
			_user$project$MenuView$room(model),
			filtered));
};
var _user$project$MenuView$leaveBtn = function (model) {
	var _p2 = model.roomName;
	if (_p2.ctor === 'Nothing') {
		return A2(
			_elm_lang$html$Html$div,
			{ctor: '[]'},
			{ctor: '[]'});
	} else {
		return A2(
			_elm_lang$html$Html$button,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Events$onClick(_user$project$Model$LeaveRoom),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: _elm_lang$html$Html$text(
					A2(
						_elm_lang$core$Basics_ops['++'],
						'Leave room \"',
						A2(_elm_lang$core$Basics_ops['++'], _p2._0, '\"'))),
				_1: {ctor: '[]'}
			});
	}
};
var _user$project$MenuView$menu = function (model) {
	return A2(
		_rundis$elm_bootstrap$Bootstrap_Grid$container,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$input,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$placeholder('Type room name'),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onInput(_user$project$Model$UpdateTypedRoomName),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$value(model.typedRoomName),
							_1: {ctor: '[]'}
						}
					}
				},
				{ctor: '[]'}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$input,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$placeholder('Type user name'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Events$onInput(_user$project$Model$UpdateTypedUserName),
							_1: {ctor: '[]'}
						}
					},
					{ctor: '[]'}),
				_1: {
					ctor: '::',
					_0: _user$project$MenuView$leaveBtn(model),
					_1: {
						ctor: '::',
						_0: _user$project$MenuView$rooms(model),
						_1: {ctor: '[]'}
					}
				}
			}
		});
};
